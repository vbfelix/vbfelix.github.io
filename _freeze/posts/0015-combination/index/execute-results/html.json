{
  "hash": "562fa3c619612629a0cc66d83900ed45",
  "result": {
    "markdown": "---\ntitle: \"An intro to: Combination and Permutation\"\nauthor: \"Vinícius Félix\"\ndate: \"2023-08-27\"\ncategories: [Intro to,Probability,R,Theory]\nimage: \"intro-combination-permutation.png\"\n---\n\n::: {.cell}\n\n:::\n\n\nIn this post, we will see that with just four questions we can easily understand which formula to apply.\n\n# Context\n\nPermutations and combinations are basic mathematical concepts with numerous real-world applications.\n\nCombinations are the process of selecting objects without regard to order, whereas permutations are the process of arranging objects in specific orders, with each arrangement being unique.\n\nThese principles underpin fields ranging from cryptography to genetics, allowing for problem-solving across multiple domains, and understanding their distinctions is critical for solving a wide range of puzzles and challenges accurately.\n\n# How to know which formula to use\n\nTo calculate the total number of combinations/permutations, you must first answer the following questions:\n\n1.  **Order matter?**\n\n2.  **There is repetition?**\n\n3.  **What is the number of total observations?**\n\n4.  **What is the number of observations to be selected?**\n\n## Example 1: Order matter with repetition\n\nAssume we want to know the number of password combinations with only numbers in a four-digit password, such as 1234.\n\n1.  **Order matters?**\n\n    Yes, because a password such as 1234 differs from a 4321.\n\n2.  **There is repetition?**\n\n    Yes, because a password could be 1111.\n\n3.  **What is the number of total observations?**\n\n    Is 10 because we have the options 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9.\n\n4.  **What is the number of observations to be selected?**\n\n    Is 4, because the password will have four digits.\n\nIf we can repeat the numbers and have ten options, the total number of passwords is 10x10x10x10 = 1.000.\n\nThe we can generalize this to:\n\n$$\nn_{[1]} \\times n_{[2]} \\times ...\\times n_{[r-1]} \\times n_{[r]} = n^r, \n$$ {#eq-permutation-with-repetition}\n\nwhere:\n\n-   $n$ is the total number of observations;\n\n-   $r$ is the number of observations to be selected.\n\n## Example 2: Order matter without repetition\n\nAssume we want to know the number of combinations in a lottery ticket with six numbers drawn from 1 to 60 in the correct order.\n\n1.  **Order matters?**\n\n    Yes, because you have to guess the correct order, 123456 is not the same as 654321.\n\n2.  **There is repetition?**\n\n    No, because each drawn number cannot be drawn again.\n\n3.  **What is the number of total observations?**\n\n    Is 60, because that is the total number to be drawn from.\n\n4.  **What is the number of observations to be selected?**\n\n    Is 6 because it is the number of numbers to be chosen.\n\nSo we have 60 for the first option, then 59 for the second, then 58, 57, 56, 55, for a total of 60x59x58x57x56x55 = 36,045,979,200 combinations.\n\nThe we can generalize this to:\n\n$$\n\\begin{align}\nn \\times (n-1) \\times ...\\times [n-(r-1)] \n&=  n \\times (n-1) \\times ...\\times (n-r+1) \\\\ \n&=  \\frac{n \\times (n-1)  \\times ...\\times(n-r+1) \\times... \\times  2 \\times 1}{(n-r)\\times(n-r-1)\\times...\\times2\\times 1}\\\\ \n&= \\frac{n!}{(n-r)!},\n\\end{align}\n$$ {#eq-permutation-without-repetition}\n\nwhere:\n\n-   $n$ is the total number of observations;\n\n-   $r$ is the number of observations to be selected.\n\n## Example 3: Order does not matter without repetition\n\nAssume we have a deck of 52 cards and want to know how many combinations exist in a three-card hand.\n\n1.  **Order matters?**\n\n    No, because only the cards themselves are important, not the order.\n\n2.  **There is repetition?**\n\n    No, since each card is unique in the deck.\n\n3.  **What is the number of total observations?**\n\n    Is 52, because the total number of cards to be drawn is 52.\n\n4.  **What is the number of observations to be selected?**\n\n    Is three because that is the number of cards in a hand.\n\nUsing @eq-permutation-without-repetition we would have 132,600 combinations. But let's take a single hand with the cards 1, 2 and 3, also applying @eq-permutation-without-repetition to this subset, that would mean a total of 6 combinations considering the order:\n\n-   1 - 2 - 3\n\n-   1 - 3 - 2\n\n-   2 - 1 - 3\n\n-   2 - 3 - 1\n\n-   3 - 1 - 2\n\n-   3 - 2 - 1\n\nSo, for example, all of these six hands are actually one, scince order is irrelevant, so the true number of hands is acutally 132,600/6 = 22,100.\n\nThe we can generalize this to:\n\n$$\n\\begin{align}\n\\frac{\\frac{n!}{(n-r)!}}{\\frac{r!}{(r-r)!}}\n&= \\frac{\\frac{n!}{(n-r)!}}{\\frac{r!}{(0)!}} \\\\\n&= \\frac{\\frac{n!}{(n-r)!}}{\\frac{r!}{1}} \\\\\n&= \\frac{n!}{r!(n-r)!},\n\\end{align}\n$$ {#eq-combination-without-repetition}\n\nwhere:\n\n-   $n$ is the total number of observations;\n\n-   $r$ is the number of observations to be selected.\n\n## Example 4: Order does not matter with repetition\n\nLet's say we need to add four extra ingredients to an Açai Bowl delivery and have five options to choose from:\n\n1.  \\[B\\] Banana\n\n2.  \\[S\\] Strawberry\n\n3.  \\[G\\] Grape\n\n4.  \\[C\\] Chocolate\n\n5.  \\[O\\] Oat\n\nSo, combinations such as \\[B,B,B,B\\], \\[B,B,B,C\\] or \\[B,S,C,G\\] can be made.\n\n1.  **Order matters?**\n\n    No, because we only care about the ingredients used.\n\n2.  **There is repetition?**\n\n    Yes, because we can reuse the ingredient.\n\n3.  **What is the number of total observations?**\n\n    Is 5, because the number of ingredient options is five.\n\n4.  **What is the number of observations to be selected?**\n\n    Is three because that is the number of ingredients to be added.\n\nApplying @eq-combination-without-repetition we would have5 combinations: \\[B,S,G,C\\], \\[B,S,G,O\\], \\[B,G,S,C\\], \\[B,G,O,C\\] and \\[S,G,C,O\\]. But now we need to take in consideration the repeated ingredients.\n\nSo, how should we think about the repetition? Now we must consider the repetitions, using Banana as an example:\n\n-   4 bananas = \\[B,B,B,B\\]\n\n-   3 bananas = \\[B,B,B,S\\] \\[B,B,B,G\\] \\[B,B,B,C\\] \\[B,B,B,O\\]\n\n-   2 bananas and 2 unique ingredientes = \\[B,B,S,G\\] \\[B,B,S,C\\] \\[B,B,S,O\\] \\[B,B,G,C\\] \\[B,B,G,O\\] \\[B,B,C,O\\]\n\n-   2 bananas and 2 identical ingredientes = \\[B,B,S,S\\] \\[B,B,G,G\\] \\[B,B,C,C\\] \\[B,B,O,O\\]\n\n-   1 bananas and 3 identical ingredientes = \\[B,S,S,S\\] \\[B,G,G,G\\] \\[B,C,C,C\\] \\[B,O,O,O\\]\n\n-   1 bananas and 3 unique ingredientes = \\[B,S,G,C\\] \\[B,S,G,O\\] \\[B,G,S,C\\] \\[B,G,O,C\\]\n\n-   1 bananas and 2 identical ingredientes = \\[B,S,S,G\\] \\[B,S,S,C\\] \\[B,S,S,O\\] \\[B,G,G,S\\] \\[B,G,G,C\\] \\[B,G,G,O\\] \\[B,C,C,S\\] \\[B,C,C,G\\] \\[B,C,C,O\\] \\[B,O,O,S\\] \\[B,O,O,G\\] \\[B,O,O,C\\]\n\nSo, we have 1 + 4 + 6 + 4 + 4 + 4 + 12 = 35 combinations, which means we must do 35 x 5? No, because some combinations would be repeated, and in this case, the order is irrelevant.\n\nWe can use @eq-combination-without-repetition but considering $n$ as $n+r-1$.\n\n$$\n\\begin{align}\n\\frac{(n+r-1)!}{r![(n+r-1)-r]!} \n&= \\frac{(n+r-1)!}{r!(n-1)!} ,\n\\end{align}\n$$ {#eq-combination-with-repetition}\n\nwhere:\n\n-   $n$ is the total number of observations;\n\n-   $r$ is the number of observations to be selected.\n\n# And where is this implemented?\n\nAll of these functions are already implemented in my R package [relper](https://vbfelix.github.io/relper/index.html#installation):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(relper)\n\n#Example 1\ncalc_combination(n = 10,r = 4,order_matter = TRUE,with_repetition = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10000\n```\n:::\n\n```{.r .cell-code}\n#Example 2\ncalc_combination(n = 60,r = 6,order_matter = TRUE,with_repetition = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 36045979200\n```\n:::\n\n```{.r .cell-code}\n#Example 3\ncalc_combination(n = 52,r = 3,order_matter = FALSE,with_repetition = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22100\n```\n:::\n\n```{.r .cell-code}\n#Example 4\ncalc_combination(n = 5,r = 4,order_matter = FALSE,with_repetition = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 70\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}