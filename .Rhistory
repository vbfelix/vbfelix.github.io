plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,35,5))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10), limits = c(0,100))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.15),breaks = seq(0,.35,.03))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10), limits = c(0,100))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.15),breaks = seq(0,.35,.03))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data +
geom_line(aes(y = benford_law, col = "Benford's Law"),size = .8)+
geom_point(aes(y = benford_law, col = "Benford's Law"), size = 2.5)+
scale_color_manual(values = palette_qua("legion")[3])
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.03))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data +
geom_line(aes(y = benford_law, col = "Benford's Law"),size = .8)+
geom_point(aes(y = benford_law, col = "Benford's Law"), size = 2.5)+
scale_color_manual(values = palette_qua("legion")[3])
1:9
tibble(numbers = 1:9) %>%
mutate(
first_digit = first_digit(numbers)
)
suppressWarnings(library(ggplot2))
suppressWarnings(library(relper))
suppressWarnings(library(dplyr))
suppressWarnings(library(tidyr))
suppressWarnings(library(janitor))
suppressWarnings(library(knitr))
suppressWarnings(library(kableExtra))
suppressWarnings(library(forcats))
first_digit <- function(x){
as.numeric(strsplit(as.character(x),split = "")[[1]][1])
}
benford <- function(x){
log(x = (x+1)/x,base = 10)
}
tibble(numbers = 1:9) %>%
mutate(
first_digit = first_digit(numbers)
)
tibble(numbers = 1:9) %>%
rowwise() %>%
mutate(
first_digit = first_digit(numbers),
benford_law = benford(first_digit)
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,35,5), limits = c(0,25))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a exponential distribution with a rate of 0.25."
)
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
tibble(numbers = 1:9) %>%
rowwise() %>%
mutate(first_digit = first_digit(numbers)) %>%
count(first_digit) %>%
mutate(benford_law = benford(first_digit))
tibble(numbers = 1:9) %>%
rowwise() %>%
mutate(first_digit = first_digit(numbers)) %>%
count(first_digit) %>%
mutate(
prop = n/sum(n),
benford_law = benford(first_digit)
)
tibble(numbers = 1:9) %>%
rowwise() %>%
mutate(first_digit = first_digit(numbers)) %>%
count(first_digit) %>%
ungroup() %>%
mutate(
prop = n/sum(n),
benford_law = benford(first_digit)
)
tibble(numbers = 1:19) %>%
rowwise() %>%
mutate(first_digit = first_digit(numbers)) %>%
count(first_digit) %>%
ungroup() %>%
mutate(
prop = n/sum(n),
benford_law = benford(first_digit)
)
tibble(numbers = 1:1000) %>%
rowwise() %>%
mutate(first_digit = first_digit(numbers)) %>%
count(first_digit) %>%
ungroup() %>%
mutate(
prop = n/sum(n),
benford_law = benford(first_digit)
)
set.seed(123);numbers <- round(runif(n = 10000,min = 1,max = 99),digits = 0)
uni_data <-
tibble(numbers) %>%
# filter(numbers > 0) %>%
rowwise() %>%
mutate(
first_digit = as.numeric(strsplit(as.character(numbers),split = "")[[1]][1])
) %>%
count(first_digit) %>%
mutate(
benford_law = benford(first_digit)
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10), limits = c(0,100))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.15),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data +
geom_line(aes(y = benford_law, col = "Benford's Law"),size = .8)+
geom_point(aes(y = benford_law, col = "Benford's Law"), size = 2.5)+
scale_color_manual(values = palette_qua("legion")[3])
plot_data  <-
data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers"
)+
plt_water_mark(vfx_watermark)
plot_data
plot_data +
geom_line(aes(y = benford_law, col = "Benford's Law"),size = .8)+
geom_point(aes(y = benford_law, col = "Benford's Law"), size = 2.5)+
scale_color_manual(values = palette_qua("legion")[3])
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,35,5), limits = c(0,25))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark_white)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a exponential distribution with a rate of 0.25."
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10), limits = c(0,100))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,100,10), limits = c(0,100))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark_white)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a uniform distribution with range from 1 to 100."
)
set.seed(123);numbers <- round(rexp(n = 10000,rate = .25),digits = 0)
exp_data <-
tibble(numbers) %>%
filter(numbers > 0) %>%
rowwise() %>%
mutate(
first_digit = as.numeric(strsplit(as.character(numbers),split = "")[[1]][1])
) %>%
count(first_digit) %>%
mutate(
benford_law = benford(first_digit)
)
suppressWarnings(library(ggplot2))
suppressWarnings(library(relper))
suppressWarnings(library(dplyr))
suppressWarnings(library(tidyr))
suppressWarnings(library(janitor))
suppressWarnings(library(knitr))
suppressWarnings(library(kableExtra))
suppressWarnings(library(forcats))
first_digit <- function(x){
as.numeric(strsplit(as.character(x),split = "")[[1]][1])
}
benford <- function(x){
log(x = (x+1)/x,base = 10)
}
set.seed(123);numbers <- round(rexp(n = 10000,rate = .25),digits = 0)
exp_data <-
tibble(numbers) %>%
filter(numbers > 0) %>%
rowwise() %>%
mutate(
first_digit = as.numeric(strsplit(as.character(numbers),split = "")[[1]][1])
) %>%
count(first_digit) %>%
mutate(
benford_law = benford(first_digit)
)
tibble(numbers) %>%
ggplot(aes(numbers))+
geom_density(fill = "royalblue3")+
plt_theme_x()+
scale_x_continuous(expand = c(0,0), breaks = seq(0,35,5), limits = c(0,25))+
scale_y_continuous(expand = c(0,0))+
plt_water_mark(vfx_watermark)+
labs(
x = "Number",
y = "",
subtitle = "Density of a random set of numbers",
caption = "Simulation from a exponential distribution with a rate of 0.25."
)
plot_data  <-
exp_data %>%
ggplot(aes(first_digit,n/sum(n)))+
geom_col(fill = "royalblue3")+
plt_theme_y()+
scale_x_continuous(breaks = 1:19)+
scale_y_continuous(expand = c(0,0), limits = c(0,.35),breaks = seq(0,.35,.05))+
labs(
x = "First digit",
y = "",
col = "",
subtitle = "First digit relative frequency of a random set of numbers",
caption = "Simulation from a exponential distribution with a rate of 0.25."
)+
plt_water_mark(vfx_watermark)
plot_data
suppressWarnings(library(ggplot2))
suppressWarnings(library(relper))
suppressWarnings(library(dplyr))
suppressWarnings(library(tidyr))
suppressWarnings(library(janitor))
suppressWarnings(library(knitr))
suppressWarnings(library(kableExtra))
suppressWarnings(library(forcats))
suppressWarnings(library(tidytext))
data <-
readRDS("bible.RDS") %>%
# select(-c(King.James.Bible,Vulgate,Douay.Rheims,Full.Title.Auth.V)) %>%
clean_names() %>%
mutate(testament = fct_rev(testament))
word_data <-
data %>%
unnest_tokens(word, text)
stop_data <-
word_data %>%
anti_join(stop_words) %>%
left_join(sentiments) %>%
mutate(
score = case_when(
sentiment == "negative" ~ -1,
sentiment == "positive" ~ 1,
TRUE ~ 0
)
)
data %>%
group_by(testament,book_number) %>%
summarise(n = n_distinct(verse)) %>%
ggplot(aes(book_number,n))+
geom_col(aes(fill = testament), col = "black")+
plt_theme_y()+
scale_x_continuous(expand = c(.008,0),breaks = seq(1,100,3))+
plt_scale_y_mirror(
expand = c(.008,0),
breaks = seq(0,3000,250),
labels = format_num(seq(0,3000,250),digits = 0)
)+
labs(
x = "Book number",
y = "",
fill = "",
title = "Number of verses for each book"
)+
plt_water_mark(vfx_watermark)+
scale_fill_manual(values = palette_seq("breaking_bad")[c(1,3)])
word_data %>%
count(Word = word,sort = TRUE,name = "Frequency") %>%
mutate(Frequency = format_num(Frequency,digits = 0)) %>%
slice(1:10)
stop_data %>%
count(Word = word,sort = TRUE,name = "Frequency") %>%
mutate(Frequency = format_num(Frequency,digits = 0)) %>%
slice(1:10)
stop_data%>%
count(testament,word) %>%
pivot_wider(values_from = n,names_from = testament) %>%
clean_names() %>%
replace_na(list(old_testament = 0, new_testament = 0)) %>%
mutate(
old_testament = 100*old_testament/sum(old_testament),
new_testament = 100*new_testament/sum(new_testament)
) %>%
filter(old_testament >= .5 | new_testament >= .5) %>%
ggplot(aes(x =old_testament,y = new_testament)) +
# geom_abline(color = "gray40", lty = 2)+
geom_point()+
geom_text(aes(label = word,color = abs(`new_testament`-`old_testament`)),
check_overlap = TRUE, vjust = 1.5,size=5,show.legend = FALSE)+
# scale_color_gradient(limits = c(0, 1), low = "darkslategray4", high = "gray75") +
theme(legend.position="none") +
labs(
y = "New testament",
x = 'Old testament',
title = "Relative frequency (%) of the word",
caption = "Words with > 0,5% frequency."
)+
scale_x_continuous(breaks = seq(0,5,.5), limits = c(-.5,3.5))+
scale_y_continuous(breaks = seq(0,5,.5), limits = c(-.5,3.5))+
plt_theme_xy()+
plt_identity_line()+
coord_fixed(expand = FALSE)+
plt_water_mark(vfx_watermark)
stop_data%>%
count(testament,word) %>%
pivot_wider(values_from = n,names_from = testament) %>%
clean_names() %>%
replace_na(list(old_testament = 0, new_testament = 0)) %>%
mutate(
old_testament = 100*old_testament/sum(old_testament),
new_testament = 100*new_testament/sum(new_testament)
) %>%
filter(old_testament >= .5 | new_testament >= .5) %>%
ggplot(aes(x =old_testament,y = new_testament)) +
# geom_abline(color = "gray40", lty = 2)+
geom_point()+
geom_text(aes(label = word,color = abs(`new_testament`-`old_testament`)),
check_overlap = TRUE, vjust = 1.5,size=5,show.legend = FALSE)+
# scale_color_gradient(limits = c(0, 1), low = "darkslategray4", high = "gray75") +
theme(legend.position="none") +
labs(
y = "New testament",
x = 'Old testament',
title = "Relative frequency (%) of the word",
caption = "Words with > 0,5% frequency."
)+
scale_x_continuous(breaks = seq(0,5,.5), limits = c(-.5,3.5))+
scale_y_continuous(breaks = seq(0,5,.5), limits = c(-.5,3.5))+
plt_theme_xy()+
plt_identity_line(linewidth = .75)+
coord_fixed(expand = FALSE)+
plt_water_mark(vfx_watermark)
